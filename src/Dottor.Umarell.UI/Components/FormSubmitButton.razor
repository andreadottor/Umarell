@implements IDisposable

<button type="submit"
        class="btn btn-primary"
        @attributes="Attributes"
        disabled="@(!Context.IsModified())">
    @ChildContent
</button>

@code {
    [CascadingParameter]
    public EditContext Context { get; set; }

    [Parameter]
    public RenderFragment ChildContent { get; set; }

    [Parameter(CaptureUnmatchedValues = true)]
    public IReadOnlyDictionary<string, object> Attributes { get; set; }


    protected override void OnInitialized()
    {
        Context.OnFieldChanged += FieldChanged;
    }

    private void FieldChanged(object sender, FieldChangedEventArgs e)
    {
        StateHasChanged();
    }

    public void Dispose()
    {
        Context.OnFieldChanged -= FieldChanged;
    }
}
